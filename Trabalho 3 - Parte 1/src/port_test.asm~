; Loads portConfig of both ports to a register, checks if it's set as all input 
; (FFFFh), changes its configuration to FF00h (15:8 input, 7:0 output)

; Sets R0 as FF00h, which'll be used both as an offset and the configuration
; bits
XOR   R0,R0,R0 ; r0 <= 0000h
LDH   R0,FF    ; r0 <= FF00h

; It's important to keep the lower part of the address in a different register
XOR   R1,R1,R1 ; r1 <= 0000h
LDL   R1,F0    ; r1 <= 00F0h

;Counts passes (e.g.: two ports (a/b) = two passes)
XOR   R3,R3,R3 ; r3 <= 0000h
ADDI  R3,02h	 ; r3 <= 0002h  

LD    R2,R0,R1 ; r2 <= portConfig(a/b)                          <--+
NOT   R2,R2    ; r2 <= !r2                                         |
JMPZD 1h       ; if (r2 != 0),                                --+  |
HALT           ; halts (meaning that portConfig wasn't FFFFh)   |  | <-+ 
ST    R0,R0,R1 ; portConfig <= FF00h                          <-+  |   |
                                                                   |   |
SUBI  R3,01h	 ; r3 <= r3 - 01h                                    |   |
JMPZD FDh			 ; halts if has done all passes)                     | --+
                                                                   |
ADDI  R1,03h   ; r1 <= 00F0h + 0003h (00F3h)                       |
JMP   FDh      ; 2nd pass                                       ---+


